name: Deploy over Azure

on: 
  workflow_dispatch:
    inputs:
      deployment_id:
        required: false
        default: '0'
        
  repository_dispatch:
    types: create-firmware

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        ref: feature/iot-adu

    - name:  'Automated Version Bump'
      id: version-bump
      uses:  'phips28/gh-action-bump-version@master'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PACKAGEJSON_DIR:  'demos/projects/ESPRESSIF/adu'
        
    - name: Copy version number to environment variable.
      env:
          VERSION_NUMBER: ${{ steps.version-bump.outputs.newTag }}
      run: echo "Version number being used $VERSION_NUMBER"


    - name: Set VERSION_NUMBER_WITHOUT_DOTS as version number without dots
      run: python demos/projects/ESPRESSIF/adu/version_number_without_dots.py ${{ env.VERSION_NUMBER }}
      shell: sh

    - name: Print version without dots
      run: echo ${{ env.VERSION_NUMBER_WITHOUT_DOTS }}

    - name: Update version number in demo_config.h
      run: python demos/projects/ESPRESSIF/adu/replace_version_demo_config.py ${{ steps.version-bump.outputs.newTag }}
      shell: sh

    - name: esp-idf build
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v4.3
        target: esp32
        path: 'demos/projects/ESPRESSIF/adu/'

    - uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
    - name: Enable installing extensions without prompt
      uses: azure/CLI@v1
      with:
        inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt

    - name: Copy bin file
      uses: canastro/copy-file-action@master
      with:
        source: "demos/projects/ESPRESSIF/adu/build/azure_iot_freertos_esp32.bin"
        target: "demos/projects/ESPRESSIF/adu/azure_iot_freertos_esp32.bin"
      
    - name: Generate manifest file
      run: python demos/projects/ESPRESSIF/adu/calculate_hash.py ${{ steps.version-bump.outputs.newTag }}
      shell: sh
      
    - name: Make a Device Update
      uses: azure/CLI@v1
      with:
        inlineScript: |
            az iot du update stage --account fmaduseviceaccount --instance fmdevupdatetoiothub --manifest-path demos/projects/ESPRESSIF/adu/ESPRESSIF.ESP32-Azure-IoT-Kit.importmanifest.json --storage-account rgtestjanstorageacc --storage-container espressif-esp32-azure-iot-kit-1-3 --overwrite --then-import

    - name: Trigger deployment to devices
      uses: azure/CLI@v1
      with:
        inlineScript: |
            az iot du device deployment create -n fmaduseviceaccount -i fmdevupdatetoiothub --group-id azureiotkit-attempt2 --deployment-id azureiotkit-attempt2-${{ env.VERSION_NUMBER_WITHOUT_DOTS }} --update-name ESP32-Azure-IoT-Kit --update-provider ESPRESSIF --update-version ${{ steps.version-bump.outputs.newTag }}




